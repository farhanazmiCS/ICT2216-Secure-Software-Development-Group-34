name: Deploy Frontend and Backend

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js version from .nvmrc
      id: use_node
      run: echo "##[set-output name=node-version;]$(cat .nvmrc)"
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ steps.use_node.outputs.node-version }}

    - name: Install dependencies and build frontend
      working-directory: ./client
      run: |
        npm install
        npm run build
      continue-on-error: true
      env:
        CI: false

    - name: Install dependencies and build backend
      run: |
        npm install
        npm run build
      continue-on-error: true

    - name: Copy SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Add SSH key to the agent
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa

    - name: Deploy frontend
      if: success()
      run: |
        scp -o StrictHostKeyChecking=no -r client/build/* ${{ secrets.USER }}@${{ secrets.HOST }}:/var/www/html/

    - name: Deploy backend
      if: success()
      run: |
        scp -o StrictHostKeyChecking=no -r * ${{ secrets.USER }}@${{ secrets.HOST }}:/path/to/backend/
        ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} 'cd /path/to/backend && npm install && pm2 restart all'

    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: build-logs
        path: |
          client/build.log
          backend/build.log

name: Deploy Frontend and Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: SSH into server, create/check repo directory, clear the repo directory, create .pem files, and create .env file
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        HOST_IP: ${{ secrets.HOST_IP }}
        NAME: ${{ secrets.NAME }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        MONGO_URL: ${{ secrets.MONGO_URL }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        PORT: ${{ secrets.BACKEND_PORT }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_LIFETIME: ${{ secrets.JWT_LIFETIME }}
        NODE_ENV: ${{ secrets.NODE_ENV }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_SECURE: ${{ secrets.EMAIL_SECURE }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      run: |
        ssh -o StrictHostKeyChecking=no $NAME@$HOST_IP << 'EOF'
          # Check if repo directory exists, if not create it, else cd into it
          cd ~
          if [ ! -d repo ]; then
            mkdir -p repo
          fi
          cd repo

          # Clear the repo directory
          rm -rf *

          # Create key.pem, cert.pem, and csr.pem certificates
          openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -keyout key.pem -out cert.pem -subj "/C=US/ST=State/L=City/O=Organization/OU=Unit/CN=common.name"
          openssl req -new -key key.pem -out csr.pem -subj "/C=US/ST=State/L=City/O=Organization/OU=Unit/CN=common.name"
          echo "CSR, Cert, and Key files created."
          ls -la

          # Create .env file
          echo "MONGO_URL=${MONGO_URL}" >> .env
          echo "MONGO_URI=${MONGO_URI}" >> .env
          echo "PORT=${PORT}" >> .env
          echo "JWT_SECRET=${JWT_SECRET}" >> .env
          echo "JWT_LIFETIME=${JWT_LIFETIME}" >> .env
          echo "NODE_ENV=${NODE_ENV}" >> .env
          echo "EMAIL_HOST=${EMAIL_HOST}" >> .env
          echo "EMAIL_PORT=${EMAIL_PORT}" >> .env
          echo "EMAIL_SECURE=${EMAIL_SECURE}" >> .env
          echo "EMAIL_USER=${EMAIL_USER}" >> .env
          echo "EMAIL_PASS=${EMAIL_PASS}" >> .env
          echo "EMAIL_FROM=${EMAIL_FROM}" >> .env

          # Verify environment variables
          cat .env
        EOF
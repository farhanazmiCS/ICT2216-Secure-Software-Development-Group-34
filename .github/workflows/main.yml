name: Deploy Frontend and Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: SSH into server, create/check repo directory, and clear the repo directory except for .env and cert files
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        HOST_IP: ${{ secrets.HOST_IP }}
        NAME: ${{ secrets.NAME }}
      run: |
        ssh -o StrictHostKeyChecking=no $NAME@$HOST_IP << 'EOF'
          # Check if repo directory exists, if not create it, else cd into it
          cd ~
          if [ ! -d repo ]; then
            mkdir -p repo
          fi
          cd repo

          # Remove all files except .env and cert files
          find . -type f ! -name '.env' ! -name 'key.pem' ! -name 'cert.pem' ! -name 'csr.pem' -delete
        EOF

    - name: SSH into server to create key.pem, cert.pem, and csr.pem certificates
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        HOST_IP: ${{ secrets.HOST_IP }}
        NAME: ${{ secrets.NAME }}
      run: |
        ssh -o StrictHostKeyChecking=no $NAME@$HOST_IP << 'EOF'
          cd ~/repo
          # Create key.pem, cert.pem, and csr.pem certificates if they don't exist
          if [ ! -f key.pem ]; then
            openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -keyout key.pem -out cert.pem -subj "/C=US/ST=State/L=City/O=Organization/OU=Unit/CN=common.name"
            openssl req -new -key key.pem -out csr.pem -subj "/C=US/ST=State/L=City/O=Organization/OU=Unit/CN=common.name"
          fi
          echo "CSR, Cert, and Key files created."
          ls -la
        EOF

    - name: SSH into server to pull latest code
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        HOST_IP: ${{ secrets.HOST_IP }}
        NAME: ${{ secrets.NAME }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        ssh -o StrictHostKeyChecking=no $NAME@$HOST_IP << 'EOF'
          cd ~/repo
          git init
          git remote add origin https://${{ secrets.GH_TOKEN }}@github.com/farhanazmiCS/ICT2216-Secure-Software-Development-Group-34.git || true
          git pull origin main
        EOF

    - name: SSH into server to create .env file if it doesn't exist
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        HOST_IP: ${{ secrets.HOST_IP }}
        NAME: ${{ secrets.NAME }}
      run: |
        ssh -o StrictHostKeyChecking=no $NAME@$HOST_IP << 'EOF'
          cd ~/repo
          
          # Run build commands
          npm install
          npm run setup-start
        EOF